/**
 * returns the assigned nodes of a slot
 * @template {ChildNode} T
 * @param {import("atomico").Ref<HTMLSlotElement>} ref
 * @returns {T[]}
 */
export function useSlot<T extends ChildNode>(ref: import("atomico").Ref<HTMLSlotElement>): T[];
/**
 * creates a persistent list of nodes from a source with the intention of
 * keeping the node in the list as long as it remains on the host
 * @template {ChildNode} T
 * @param {import("atomico").Ref<HTMLSlotElement>} ref
 * @returns {T[]}
 */
export function useProxySlot<T extends ChildNode>(ref: import("atomico").Ref<HTMLSlotElement>): T[];
