{"ast":null,"code":"'use strict';\n\nvar stripAnsi = require('strip-ansi');\n\nvar socket = require(\"./socket\");\n\nvar overlay = require(\"./overlay\");\n\nvar _require = require(\"./utils/log\"),\n    log = _require.log,\n    setLogLevel = _require.setLogLevel;\n\nvar sendMessage = require(\"./utils/sendMessage\");\n\nvar reloadApp = require(\"./utils/reloadApp\");\n\nvar createSocketUrl = require(\"./utils/createSocketUrl\");\n\nvar status = {\n  isUnloading: false,\n  currentHash: ''\n};\nvar options = {\n  hot: false,\n  hotReload: true,\n  liveReload: false,\n  initial: true,\n  useWarningOverlay: false,\n  useErrorOverlay: false,\n  useProgress: false\n};\nvar socketUrl = createSocketUrl(__resourceQuery);\nself.addEventListener('beforeunload', function () {\n  status.isUnloading = true;\n});\n\nif (typeof window !== 'undefined') {\n  var qs = window.location.search.toLowerCase();\n  options.hotReload = qs.indexOf('hotreload=false') === -1;\n}\n\nvar onSocketMessage = {\n  hot: function hot() {\n    options.hot = true;\n    log.info('[WDS] Hot Module Replacement enabled.');\n  },\n  liveReload: function liveReload() {\n    options.liveReload = true;\n    log.info('[WDS] Live Reloading enabled.');\n  },\n  invalid: function invalid() {\n    log.info('[WDS] App updated. Recompiling...');\n\n    if (options.useWarningOverlay || options.useErrorOverlay) {\n      overlay.clear();\n    }\n\n    sendMessage('Invalid');\n  },\n  hash: function hash(_hash) {\n    status.currentHash = _hash;\n  },\n  'still-ok': function stillOk() {\n    log.info('[WDS] Nothing changed.');\n\n    if (options.useWarningOverlay || options.useErrorOverlay) {\n      overlay.clear();\n    }\n\n    sendMessage('StillOk');\n  },\n  'log-level': function logLevel(level) {\n    var hotCtx = require.context('webpack/hot', false, /^\\.\\/log$/);\n\n    if (hotCtx.keys().indexOf('./log') !== -1) {\n      hotCtx('./log').setLogLevel(level);\n    }\n\n    setLogLevel(level);\n  },\n  overlay: function overlay(value) {\n    if (typeof document !== 'undefined') {\n      if (typeof value === 'boolean') {\n        options.useWarningOverlay = false;\n        options.useErrorOverlay = value;\n      } else if (value) {\n        options.useWarningOverlay = value.warnings;\n        options.useErrorOverlay = value.errors;\n      }\n    }\n  },\n  progress: function progress(_progress) {\n    if (typeof document !== 'undefined') {\n      options.useProgress = _progress;\n    }\n  },\n  'progress-update': function progressUpdate(data) {\n    if (options.useProgress) {\n      log.info(\"[WDS] \".concat(data.percent, \"% - \").concat(data.msg, \".\"));\n    }\n\n    sendMessage('Progress', data);\n  },\n  ok: function ok() {\n    sendMessage('Ok');\n\n    if (options.useWarningOverlay || options.useErrorOverlay) {\n      overlay.clear();\n    }\n\n    if (options.initial) {\n      return options.initial = false;\n    }\n\n    reloadApp(options, status);\n  },\n  'content-changed': function contentChanged() {\n    log.info('[WDS] Content base changed. Reloading...');\n    self.location.reload();\n  },\n  warnings: function warnings(_warnings) {\n    log.warn('[WDS] Warnings while compiling.');\n\n    var strippedWarnings = _warnings.map(function (warning) {\n      return stripAnsi(warning);\n    });\n\n    sendMessage('Warnings', strippedWarnings);\n\n    for (var i = 0; i < strippedWarnings.length; i++) {\n      log.warn(strippedWarnings[i]);\n    }\n\n    if (options.useWarningOverlay) {\n      overlay.showMessage(_warnings);\n    }\n\n    if (options.initial) {\n      return options.initial = false;\n    }\n\n    reloadApp(options, status);\n  },\n  errors: function errors(_errors) {\n    log.error('[WDS] Errors while compiling. Reload prevented.');\n\n    var strippedErrors = _errors.map(function (error) {\n      return stripAnsi(error);\n    });\n\n    sendMessage('Errors', strippedErrors);\n\n    for (var i = 0; i < strippedErrors.length; i++) {\n      log.error(strippedErrors[i]);\n    }\n\n    if (options.useErrorOverlay) {\n      overlay.showMessage(_errors);\n    }\n\n    options.initial = false;\n  },\n  error: function error(_error) {\n    log.error(_error);\n  },\n  close: function close() {\n    log.error('[WDS] Disconnected!');\n    sendMessage('Close');\n  }\n};\nsocket(socketUrl, onSocketMessage);","map":{"version":3,"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/webpack-dev-server/client/index.js"],"names":["stripAnsi","require","socket","overlay","_require","log","setLogLevel","sendMessage","reloadApp","createSocketUrl","status","isUnloading","currentHash","options","hot","hotReload","liveReload","initial","useWarningOverlay","useErrorOverlay","useProgress","socketUrl","__resourceQuery","self","addEventListener","window","qs","location","search","toLowerCase","indexOf","onSocketMessage","info","invalid","clear","hash","_hash","stillOk","logLevel","level","hotCtx","context","keys","value","document","warnings","errors","progress","_progress","progressUpdate","data","concat","percent","msg","ok","contentChanged","reload","_warnings","warn","strippedWarnings","map","warning","i","length","showMessage","_errors","error","strippedErrors","_error","close"],"mappings":"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","sourcesContent":["'use strict';\n/* global __resourceQuery WorkerGlobalScope self */\n\n/* eslint prefer-destructuring: off */\n\nvar stripAnsi = require('strip-ansi');\n\nvar socket = require('./socket');\n\nvar overlay = require('./overlay');\n\nvar _require = require('./utils/log'),\n    log = _require.log,\n    setLogLevel = _require.setLogLevel;\n\nvar sendMessage = require('./utils/sendMessage');\n\nvar reloadApp = require('./utils/reloadApp');\n\nvar createSocketUrl = require('./utils/createSocketUrl');\n\nvar status = {\n  isUnloading: false,\n  currentHash: ''\n};\nvar options = {\n  hot: false,\n  hotReload: true,\n  liveReload: false,\n  initial: true,\n  useWarningOverlay: false,\n  useErrorOverlay: false,\n  useProgress: false\n};\nvar socketUrl = createSocketUrl(__resourceQuery);\nself.addEventListener('beforeunload', function () {\n  status.isUnloading = true;\n});\n\nif (typeof window !== 'undefined') {\n  var qs = window.location.search.toLowerCase();\n  options.hotReload = qs.indexOf('hotreload=false') === -1;\n}\n\nvar onSocketMessage = {\n  hot: function hot() {\n    options.hot = true;\n    log.info('[WDS] Hot Module Replacement enabled.');\n  },\n  liveReload: function liveReload() {\n    options.liveReload = true;\n    log.info('[WDS] Live Reloading enabled.');\n  },\n  invalid: function invalid() {\n    log.info('[WDS] App updated. Recompiling...'); // fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n\n    if (options.useWarningOverlay || options.useErrorOverlay) {\n      overlay.clear();\n    }\n\n    sendMessage('Invalid');\n  },\n  hash: function hash(_hash) {\n    status.currentHash = _hash;\n  },\n  'still-ok': function stillOk() {\n    log.info('[WDS] Nothing changed.');\n\n    if (options.useWarningOverlay || options.useErrorOverlay) {\n      overlay.clear();\n    }\n\n    sendMessage('StillOk');\n  },\n  'log-level': function logLevel(level) {\n    var hotCtx = require.context('webpack/hot', false, /^\\.\\/log$/);\n\n    if (hotCtx.keys().indexOf('./log') !== -1) {\n      hotCtx('./log').setLogLevel(level);\n    }\n\n    setLogLevel(level);\n  },\n  overlay: function overlay(value) {\n    if (typeof document !== 'undefined') {\n      if (typeof value === 'boolean') {\n        options.useWarningOverlay = false;\n        options.useErrorOverlay = value;\n      } else if (value) {\n        options.useWarningOverlay = value.warnings;\n        options.useErrorOverlay = value.errors;\n      }\n    }\n  },\n  progress: function progress(_progress) {\n    if (typeof document !== 'undefined') {\n      options.useProgress = _progress;\n    }\n  },\n  'progress-update': function progressUpdate(data) {\n    if (options.useProgress) {\n      log.info(\"[WDS] \".concat(data.percent, \"% - \").concat(data.msg, \".\"));\n    }\n\n    sendMessage('Progress', data);\n  },\n  ok: function ok() {\n    sendMessage('Ok');\n\n    if (options.useWarningOverlay || options.useErrorOverlay) {\n      overlay.clear();\n    }\n\n    if (options.initial) {\n      return options.initial = false;\n    } // eslint-disable-line no-return-assign\n\n\n    reloadApp(options, status);\n  },\n  'content-changed': function contentChanged() {\n    log.info('[WDS] Content base changed. Reloading...');\n    self.location.reload();\n  },\n  warnings: function warnings(_warnings) {\n    log.warn('[WDS] Warnings while compiling.');\n\n    var strippedWarnings = _warnings.map(function (warning) {\n      return stripAnsi(warning);\n    });\n\n    sendMessage('Warnings', strippedWarnings);\n\n    for (var i = 0; i < strippedWarnings.length; i++) {\n      log.warn(strippedWarnings[i]);\n    }\n\n    if (options.useWarningOverlay) {\n      overlay.showMessage(_warnings);\n    }\n\n    if (options.initial) {\n      return options.initial = false;\n    } // eslint-disable-line no-return-assign\n\n\n    reloadApp(options, status);\n  },\n  errors: function errors(_errors) {\n    log.error('[WDS] Errors while compiling. Reload prevented.');\n\n    var strippedErrors = _errors.map(function (error) {\n      return stripAnsi(error);\n    });\n\n    sendMessage('Errors', strippedErrors);\n\n    for (var i = 0; i < strippedErrors.length; i++) {\n      log.error(strippedErrors[i]);\n    }\n\n    if (options.useErrorOverlay) {\n      overlay.showMessage(_errors);\n    }\n\n    options.initial = false;\n  },\n  error: function error(_error) {\n    log.error(_error);\n  },\n  close: function close() {\n    log.error('[WDS] Disconnected!');\n    sendMessage('Close');\n  }\n};\nsocket(socketUrl, onSocketMessage);"]},"metadata":{},"sourceType":"script"}