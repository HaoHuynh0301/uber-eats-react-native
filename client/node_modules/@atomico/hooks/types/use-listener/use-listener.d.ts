/**
 * @param {import("atomico").Ref} ref
 * @param {string} name
 * @param {EventListener} handler
 * @param {boolean|AddEventListenerOptions} [options]
 */
export function useListener(ref: import("atomico").Ref, name: string, handler: EventListener, options?: boolean | AddEventListenerOptions | undefined): void;
/**
 * Associate an event and return a callback to remove said event
 * @param {ChildNode} current
 * @param {string} name
 * @param {EventListener} handler
 * @param {boolean|AddEventListenerOptions} [options]
 * @returns {()=>void}
 */
export function addListener(current: ChildNode, name: string, handler: EventListener, options?: boolean | AddEventListenerOptions | undefined): () => void;
/**
 * @template T
 * @param {import("atomico").Ref} ref
 * @param {string} name
 * @param {(event:Event)=>T} handler
 * @param {boolean|AddEventListenerOptions} [options]
 * @return {T|null}
 */
export function useListenerState<T>(ref: import("atomico").Ref, name: string, handler: (event: Event) => T, options?: boolean | AddEventListenerOptions | undefined): T | null;
